/**
 * @file      hardware.h (180.ARM_Peripherals/Sources/hardware.h)
 *
 * Main header file for USBDM library.
 * Generated code is included via this file.
 *
 * @version  V4.12.1.270
 * @date     1 December 2021
 */

/*
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */

#ifndef INCLUDE_USBDM_HARDWARE_H_
#define INCLUDE_USBDM_HARDWARE_H_

#include "error.h"
#include "pin_mapping.h"
#include "delay.h"
#include "console.h"

#include "gpio.h"
#include "adc.h"
#include "spi.h"
#include "cmp.h"
#include "ftm.h"


namespace USBDM {

/**
 * Map all configured pins to peripheral signals.
 *
 * PCRs of allocated pins are set according to settings in Configure.usbdmProject
 *
 * @note Only the lower 16-bits of the PCR registers are initialised
 */
extern void mapAllPins();

/// ADC, Analogue Input
typedef Adc0                                                 InterfaceAdc;                                 

/// Vbdm
typedef Adc0::Channel<AdcChannelNum_12>                      TVdd_Measure;                                 // PTB2(p37)

typedef Adc0::Channel<AdcChannelNum_19>                      Identify;                                     // ADC0_DM0(p10)

/// CMP, Analogue Comparator
typedef Cmp0                                                 TVdd_Monitor;                                 

/// Vbdm
typedef Cmp0::Pin<Cmp0InputMinus_Ptc7>                       TVdd_Mon;                                     // PTC7(p52)

typedef Cmp0::Pin<Cmp0InputMinus_CmpDac>                     TVdd_DacRef;                                  // CMP_DAC(Internal)

/// FTM, PWM, Input capture and Output compare
typedef Ftm0                                                 BdmTimer;                                     

/// BKGD/SWD_DIR output from FTM.CH2 (bdm)
typedef Ftm0::Channel<2>                                     BkgdDir;                                      // PTC3(p46)

/// BKGD/SWD_I input to FTM.CH4 (bdm)
typedef Ftm0::Channel<4>                                     BkgdIn;                                       // PTD4(p61)

/// BKGD/SWD_O output from FTM.CH6 (bdm)
typedef Ftm0::Channel<6>                                     BkgdOut;                                      // PTD6(p63)

/// TPa2
typedef USBDM::GpioB<1,ActiveHigh>                           TPa2;                                         // PTB1(p36)

/// TPa1
typedef USBDM::GpioB<0,ActiveHigh>                           TPa1;                                         // PTB0(p35)

/// TVddLed
typedef USBDM::GpioB<3,ActiveHigh>                           TVdd_Led;                                     // PTB3(p38)

/// RST_DIR
typedef USBDM::GpioC<0,ActiveHigh>                           Reset_Dir;                                    // PTC0(p43)

/// RST_IO
typedef USBDM::GpioC<1,ActiveHigh>                           Reset_IO;                                     // PTC1(p44)

/// SWD_EN
typedef USBDM::GpioC<4,ActiveHigh>                           Swd_Enable;                                   // PTC4(p49)

/// Vdd_En
typedef USBDM::GpioD<1,ActiveHigh>                           TVdd_Enable;                                  // PTD1(p58)

/// USB_LED
typedef USBDM::GpioD<7,ActiveHigh>                           Usb_Led;                                      // PTD7(p64)

/// Vdd_Flt
typedef USBDM::GpioD<0,ActiveHigh>                           TVdd_Fault;                                   // PTD0(p57)

/// SPI, Serial Peripheral Interface
typedef Spi0                                                 SwdSpi;                                       

} // End namespace USBDM

#endif /* INCLUDE_USBDM_HARDWARE_H_ */
